// Code generated by MockGen. DO NOT EDIT.
// Source: internal/dynamo/requestor.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	dynamodb "github.com/aws/aws-sdk-go/service/dynamodb"
	gomock "github.com/golang/mock/gomock"
)

// Mockrequestor is a mock of requestor interface.
type Mockrequestor struct {
	ctrl     *gomock.Controller
	recorder *MockrequestorMockRecorder
}

// MockrequestorMockRecorder is the mock recorder for Mockrequestor.
type MockrequestorMockRecorder struct {
	mock *Mockrequestor
}

// NewMockrequestor creates a new mock instance.
func NewMockrequestor(ctrl *gomock.Controller) *Mockrequestor {
	mock := &Mockrequestor{ctrl: ctrl}
	mock.recorder = &MockrequestorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *Mockrequestor) EXPECT() *MockrequestorMockRecorder {
	return m.recorder
}

// GetItem mocks base method.
func (m *Mockrequestor) GetItem(input *dynamodb.GetItemInput) (*dynamodb.GetItemOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetItem", input)
	ret0, _ := ret[0].(*dynamodb.GetItemOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetItem indicates an expected call of GetItem.
func (mr *MockrequestorMockRecorder) GetItem(input interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetItem", reflect.TypeOf((*Mockrequestor)(nil).GetItem), input)
}

// PutItem mocks base method.
func (m *Mockrequestor) PutItem(input *dynamodb.PutItemInput) (*dynamodb.PutItemOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PutItem", input)
	ret0, _ := ret[0].(*dynamodb.PutItemOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PutItem indicates an expected call of PutItem.
func (mr *MockrequestorMockRecorder) PutItem(input interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PutItem", reflect.TypeOf((*Mockrequestor)(nil).PutItem), input)
}
