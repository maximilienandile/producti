// Code generated by MockGen. DO NOT EDIT.
// Source: internal/dynamo/clientInterface.go

// Package dynamo is a generated GoMock package.
package dynamo

import (
	reflect "reflect"

	dynamodb "github.com/aws/aws-sdk-go/service/dynamodb"
	gomock "github.com/golang/mock/gomock"
)

// MockDynamoClient is a mock of DynamoClient interface.
type MockDynamoClient struct {
	ctrl     *gomock.Controller
	recorder *MockDynamoClientMockRecorder
}

// MockDynamoClientMockRecorder is the mock recorder for MockDynamoClient.
type MockDynamoClientMockRecorder struct {
	mock *MockDynamoClient
}

// NewMockDynamoClient creates a new mock instance.
func NewMockDynamoClient(ctrl *gomock.Controller) *MockDynamoClient {
	mock := &MockDynamoClient{ctrl: ctrl}
	mock.recorder = &MockDynamoClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDynamoClient) EXPECT() *MockDynamoClientMockRecorder {
	return m.recorder
}

// GetAllByPK mocks base method.
func (m *MockDynamoClient) GetAllByPK(pkValue PartitionKey) ([]map[string]*dynamodb.AttributeValue, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllByPK", pkValue)
	ret0, _ := ret[0].([]map[string]*dynamodb.AttributeValue)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllByPK indicates an expected call of GetAllByPK.
func (mr *MockDynamoClientMockRecorder) GetAllByPK(pkValue interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllByPK", reflect.TypeOf((*MockDynamoClient)(nil).GetAllByPK), pkValue)
}

// GetByKey mocks base method.
func (m *MockDynamoClient) GetByKey(partitionKeyValue PartitionKey, sortKeyValue string) (map[string]*dynamodb.AttributeValue, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByKey", partitionKeyValue, sortKeyValue)
	ret0, _ := ret[0].(map[string]*dynamodb.AttributeValue)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByKey indicates an expected call of GetByKey.
func (mr *MockDynamoClientMockRecorder) GetByKey(partitionKeyValue, sortKeyValue interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByKey", reflect.TypeOf((*MockDynamoClient)(nil).GetByKey), partitionKeyValue, sortKeyValue)
}

// Put mocks base method.
func (m *MockDynamoClient) Put(req PutRequest) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Put", req)
	ret0, _ := ret[0].(error)
	return ret0
}

// Put indicates an expected call of Put.
func (mr *MockDynamoClientMockRecorder) Put(req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Put", reflect.TypeOf((*MockDynamoClient)(nil).Put), req)
}
